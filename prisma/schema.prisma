// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Message {
  id          String        @id @default(uuid())
  content     String
  senderId    String
  sender      ChannelMember @relation(fields: [senderId, channelId], references: [memberId, channelId])
  channelId   String
  channel     Channel       @relation(name: "messages", fields: [channelId], references: [id])
  lastMessage Channel?      @relation(name: "last_message")
  updatedAt   DateTime      @updatedAt
  createdAt   DateTime      @default(now())
}

model Channel {
  id            String          @id
  name          String
  imgUrl        String
  lastMessageId String?         @unique
  lastMessage   Message?        @relation(name: "last_message", fields: [lastMessageId], references: [id])
  messages      Message[]       @relation(name: "messages")
  members       ChannelMember[]
  updatedAt     DateTime        @updatedAt
  createdAt     DateTime        @default(now())
}

model ChannelMember {
  online    Boolean   @default(false)
  seenAt    DateTime?
  memberId  String
  channelId String
  channel   Channel   @relation(fields: [channelId], references: [id])
  messages  Message[]
  updatedAt DateTime  @updatedAt

  @@id([memberId, channelId])
}
